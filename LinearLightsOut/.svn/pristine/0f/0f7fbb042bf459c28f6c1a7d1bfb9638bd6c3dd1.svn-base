package linearLightsOut;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JPanel;

/**
 * 
 * This class bulids the light buttons with given number and particular
 * function.
 *
 * @author Bochuan Lu. Created Oct 14, 2015.
 */
public class LightButton {
	private ArrayList<JButton> lights = new ArrayList<JButton>();
	private int lightsNum;
	
	/**
	 * 
	 * Contructs a default LightButton.
	 *
	 */
	public LightButton(){
		this.lightsNum=0;
	}

	/**
	 * 
	 * Contructs a LightButton with given number.
	 *
	 * @param number
	 */
	public LightButton(int number) {
		this.lightsNum = number;
	}

	/**
	 * 
	 * Set the light buttons with given number.
	 *
	 */
	public void setLights() {
		for (int i = 0; i < this.lightsNum; i++) {
			if (Math.random() > 0.5) {
				lights.add(new JButton("X"));
			} else {
				lights.add(new JButton("O"));
			}
		}
	}

	/**
	 * 
	 * Refreshs the light buttons to build a new game.
	 *
	 */
	public void refreshLights() {
		for (int i = 0; i < this.lightsNum; i++) {
			if (Math.random() > 0.5) {
				lights.get(i).setText("X");
			} else {
				lights.get(i).setText("O");
			}
		}
	}

	/**
	 * 
	 * Adds the light buttons to a given panel.
	 *
	 * @param panel
	 */
	public void addToPanel(JPanel panel) {
		for (JButton light : lights) {
			panel.add(light);
		}
	}

	/**
	 * 
	 * Returns a ActionListener can switch the lights on and off.
	 *
	 * @param light
	 * @return
	 */
	public ActionListener setSwitch(final JButton light) {
		ActionListener switchFunction = new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				if (light.getText().equals("X")) {
					light.setText("O");
				} else {
					light.setText("X");
				}
			}
		};
		return switchFunction;
	}

	/**
	 * 
	 * Sets the switch function to light buttons.
	 *
	 */
	public void setLightSwitch() {
		for (int i = 0; i < this.lightsNum; i++) {
			if (i != 0 && i != this.lightsNum - 1) {
				lights.get(i).addActionListener(setSwitch(lights.get(i - 1)));
				lights.get(i).addActionListener(setSwitch(lights.get(i)));
				lights.get(i).addActionListener(setSwitch(lights.get(i + 1)));
			} else if (i == 0) {
				lights.get(i).addActionListener(setSwitch(lights.get(i)));
				lights.get(i).addActionListener(setSwitch(lights.get(i + 1)));
			} else {
				lights.get(i).addActionListener(setSwitch(lights.get(i - 1)));
				lights.get(i).addActionListener(setSwitch(lights.get(i)));
			}
		}
	}
}